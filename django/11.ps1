<# 11
Develop example Django app that performs CSV and PDF generation for any models
created in previous laboratory component.
#>

mkdir eleven

Set-Location eleven

python -m venv env

Set-ExecutionPolicy RemoteSigned -Scope CurrentUser

.\env\Scripts\activate

pip install django 
pip install reportlab

Set-Location .\env

django-admin startproject book

Set-Location .\book

python manage.py startapp csvpdf

@"
from django.db import models

class Books(models.Model):
    title = models.CharField(max_length=200)
    author = models.CharField(max_length=200)
    published_date = models.DateField()

    def __str__(self):
        return self.title
"@ | Set-Content .\csvpdf\models.py 

@"
import csv
from django.http import HttpResponse
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from .models import Books

def export_books_csv(request):
    books = Books.objects.all()
    response = HttpResponse(content_type='text/csv')
    response['Content-Disposition'] = 'attachment; filename="books.csv"'

    writer = csv.writer(response)
    writer.writerow(['Title', 'Author', 'Published Date'])

    for book in books:
        writer.writerow([book.title, book.author, book.published_date])

    return response

def export_books_pdf(request):
    books = Books.objects.all()
    response = HttpResponse(content_type='application/pdf')
    response['Content-Disposition'] = 'attachment; filename="books.pdf"'

    p = canvas.Canvas(response, pagesize=letter)
    width, height = letter

    p.drawString(100, height - 100, "Books List")

    y = height - 120
    for book in books:
        p.drawString(100, y, f"Title: {book.title}, Author: {book.author}, Published Date: {book.published_date}")
        y -= 20

    p.showPage()
    p.save()
    return response

"@ | Set-Content .\csvpdf\views.py 

@"
from django.urls import path
from .views import export_books_csv, export_books_pdf

urlpatterns = [
    path('export/csv/', export_books_csv, name='export_books_csv'),
    path('export/pdf/', export_books_pdf, name='export_books_pdf'),
]

"@ | Set-Content .\csvpdf\urls.py 

@"
from django.contrib import admin
from django.urls import include, path

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('csvpdf.urls')),
]
"@ | Set-Content .\book\urls.py 

@"
"""
Django settings for book project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-n@9*pha+_h=1w@s^wwp+h1t8tm8dc9ozde_61o7^i@3si)r#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'csvpdf'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'book.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'book.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

"@ | Set-Content .\book\settings.py 

python manage.py makemigrations

python manage.py migrate 

$env:DJANGO_SETTINGS_MODULE = "book.settings"

@"
type:

python manage.py shell
copy and paste the below commands: ctrl+shif+v

from csvpdf.models import Books
Books.objects.create(title='Attitude is Everything',author='Jeff Keller',published_date='2015-10-10')
Books.objects.create(title='Challenging Destiny',author='Medha',published_date='2019-11-12')
Books.objects.create(title='Rich Dad Poor Dad',author='Robert',published_date='1995-10-29')
Books.objects.create(title='Atomic Habits',author='James',published_date='2018-10-18')

ctrl-z to exit shell
"@ | Set-Content .\addBooks.txt

python manage.py makemigrations

python manage.py migrate 

python manage.py runserver
